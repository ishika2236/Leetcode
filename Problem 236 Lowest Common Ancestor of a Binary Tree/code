/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {

        if(root==nullptr){
            return nullptr;
        }
        if(root->val == p->val ||  root->val == q->val){
            return root;
        }
        TreeNode* leftans=lowestCommonAncestor(root->left,p,q);
        TreeNode* rightans=lowestCommonAncestor(root->right,p,q);

        if(leftans !=nullptr && rightans != nullptr){
            return root;
        }
        else if(leftans!= nullptr && rightans== nullptr){
            return leftans;
        }
        else if(leftans==nullptr && rightans!= nullptr){
            return rightans;
        }
        else{
            return nullptr;
        }

        
    }
};