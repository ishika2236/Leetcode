class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int first = -1;
    int last = -1;
    int low = 0;
    int high = nums.size() - 1;
    // Find the first occurrence of the target
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (nums[mid] >= target) {
            high = mid - 1;
        } else {
            low = mid + 1;
        }
        if (nums[mid] == target) {
            first = mid;
        }
    }

    // Find the last occurrence of the target
    low = 0;
    high = nums.size() - 1;
    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (nums[mid] <= target) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
        if (nums[mid] == target) {
            last = mid;
        }
    }

    return {first, last};

        
    }
};