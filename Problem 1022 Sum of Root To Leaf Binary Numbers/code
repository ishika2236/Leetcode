#include <cmath>
using namespace std;

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    int sumRootToLeaf(TreeNode* root) {
        return sumRootToLeafHelper(root, 0);
    }

private:
    int sumRootToLeafHelper(TreeNode* root, int currentSum) {
        if (root == nullptr) {
            return 0;
        }


        currentSum = (currentSum << 1) + root->val;

        
        if (root->left == nullptr && root->right == nullptr) {
            return currentSum;
        }

        int leftSum = sumRootToLeafHelper(root->left, currentSum);
        int rightSum = sumRootToLeafHelper(root->right, currentSum);

        return leftSum + rightSum;
    }
};
