class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        if (nums1.size() > nums2.size()) {
            int n = nums1.size();
            unordered_map<int, int> arr;

            for (int i = 0; i < nums1.size(); i++) {
                arr[nums1[i]]++;
            }
            vector<int> ans;
            for (int i = 0; i < nums2.size(); i++) {
                if (arr[nums2[i]] > 0) {
                    ans.push_back(nums2[i]);
                    arr[nums2[i]]--;  // Decrement the count of the intersected element
                }
            }
            return ans; // Return the result after the loop completes
        } else {
            int n = nums2.size();
            unordered_map<int, int> arr;

            for (int i = 0; i < nums2.size(); i++) {
                arr[nums2[i]]++;
            }
            vector<int> ans;
            for (int i = 0; i < nums1.size(); i++) {
                if (arr[nums1[i]] > 0) {
                    ans.push_back(nums1[i]);
                    arr[nums1[i]]--;  // Decrement the count of the intersected element
                }
            }
            return ans; // Return the result after the loop completes
        }
    }
};
