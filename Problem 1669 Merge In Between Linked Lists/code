/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeInBetween(ListNode* list1, int a, int b, ListNode* list2) {
        ListNode* dummy= new ListNode(0);
        ListNode* dummy2= dummy;
        ListNode* temp= list2;
        int count=0;
        while(temp!=nullptr){
            count++;
            temp=temp->next;  
        }
        // dummy->next=list1;

        for(int i=0;i<a;i++){
            dummy->next= list1;
            dummy=dummy->next;
            list1=list1->next;
        }
        for(int i=0;i<count;i++){
            dummy->next=list2;
            dummy=dummy->next;
            list2=list2->next;
        }
        for(int i=a;i<=b;i++){
            list1=list1->next;
        }
        while(list1!=nullptr){
            dummy->next=list1;
            dummy=dummy->next;
            list1=list1->next;
        }
        ListNode* finalnode= dummy2->next;
        delete dummy2;
        return finalnode;
    
    }
};