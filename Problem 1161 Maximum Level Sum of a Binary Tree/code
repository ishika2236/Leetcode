class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if (root == nullptr) {
            return 0;
        }

        int maxSum = INT_MIN;
        int level = 1;
        int currentLevel = 1;

        queue<TreeNode*> q;
        q.push(root);

        while (!q.empty()) {
            int levelSum = 0;
            int currentLevelSize = q.size();

            for (int i = 0; i < currentLevelSize; i++) {
                TreeNode* temp = q.front();
                q.pop();

                levelSum += temp->val;

                if (temp->left) {
                    q.push(temp->left);
                }
                if (temp->right) {
                    q.push(temp->right);
                }
            }

            if (levelSum > maxSum) {
                maxSum = levelSum;
                level = currentLevel;
            }

            currentLevel++;
        }

        return level;
    }
};
