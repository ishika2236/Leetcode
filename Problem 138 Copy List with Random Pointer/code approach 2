/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
 
    
        //create a clone list
        Node* cloneHead=nullptr;
        Node* cloneTail=nullptr;

        Node* temp=head;
        while(temp!=nullptr){
            InsertAtTail(cloneHead, cloneTail, temp->val);
            temp=temp->next;
        }
        //create a map
        unordered_map<Node*,Node*>oldtonew;
        Node* original=head;
        Node* clone=cloneHead;
        while(original!=nullptr){
            oldtonew[original]=clone;
            original=original->next;
            clone=clone->next;
        }
        original=head;
        clone=cloneHead;
        while(original!=nullptr){
            clone->random= oldtonew[original->random];
            original=original->next;
            clone=clone->next;
        }
        return cloneHead;
    }

};
