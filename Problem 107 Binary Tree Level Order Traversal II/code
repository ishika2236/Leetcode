class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> ans;
        if (root == nullptr) {
            return ans;
        }

        queue<TreeNode*> q;
        q.push(root);

        while (!q.empty()) {
            int levelSize = q.size();
            vector<int> levelValues;

            for (int i = 0; i < levelSize; i++) {
                TreeNode* temp = q.front();
                q.pop();
                levelValues.push_back(temp->val);

                if (temp->left) {
                    q.push(temp->left);
                }
                if (temp->right) {
                    q.push(temp->right);
                }
            }

            ans.push_back(levelValues);
        }

        if (ans.size() > 1) {
            reverse(ans.begin(), ans.end());
        }

        return ans;
    }
};