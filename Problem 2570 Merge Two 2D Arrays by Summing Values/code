class Solution {
public:
    vector<vector<int>> mergeArrays(vector<vector<int>>& nums1, vector<vector<int>>& nums2) {
        unordered_map<int, int> map1;
        unordered_map<int, int> map2;
        int size = INT_MIN;

        for (int i = 0; i < nums1.size(); i++) {
            map1[nums1[i][0]] = nums1[i][1];
            size = max(size, nums1[i][0]);
        }
        for (int i = 0; i < nums2.size(); i++) {
            map2[nums2[i][0]] = nums2[i][1];
            size = max(size, nums2[i][0]);
        }
        vector<vector<int>> v;
        for (int i = 1; i <= size; i++) {
            int num1 = map1[i];
            int num2 = map2[i];
            if (num1 != 0 || num2 != 0) {
                vector<int> temp;
                temp.push_back(i);
                temp.push_back(num1 + num2);
                v.push_back(temp);
            }
        }
        return v;
    }
};
