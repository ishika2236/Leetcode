/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isUnivalTree(TreeNode* root) {
        unordered_set <int> s;
        if(root==nullptr){
            return true;
        }
        queue<TreeNode*> q;
        q.push(root);   
        while(!q.empty()){
            
            int size=q.size();
            for(int i=0;i<size;i++){
                TreeNode* temp= q.front();
                q.pop();
                s.insert(temp->val);
                if(temp->left){
                    q.push(temp->left);
                }
                if(temp->right){
                    q.push(temp->right);
                }
            }
        }
        if(s.size()>1){
            return false;
        }
        return true;
        
    }
};