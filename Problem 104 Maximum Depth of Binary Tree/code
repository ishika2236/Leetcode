class Solution {
public:
    int maxDepth(TreeNode* root) {
        if (root == nullptr) {
            return 0;  // If the root is null, the depth is 0.
        }
        
        int leftDepth = maxDepth(root->left);    // Calculate the maximum depth of the left subtree.
        int rightDepth = maxDepth(root->right);  // Calculate the maximum depth of the right subtree.
        
        return max(leftDepth, rightDepth) + 1;   // Return the maximum depth among the left and right subtrees, plus 1 for the root node.
    }
};
