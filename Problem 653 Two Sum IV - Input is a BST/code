#include <vector>
using namespace std;

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    vector<int> solve(TreeNode* root) {
        vector<int> v;
        if (root == nullptr) {
            return v;
        }
        v.push_back(root->val);
        vector<int> leftsum = solve(root->left);
        vector<int> rightsum = solve(root->right);

        v.insert(v.end(), leftsum.begin(), leftsum.end());
        v.insert(v.end(), rightsum.begin(), rightsum.end());
        return v;
    }

public:
    bool findTarget(TreeNode* root, int k) {
        vector<int> v = solve(root);
        for (int i = 0; i < v.size(); i++) {
            for (int j = i + 1; j < v.size(); j++) {
                if (v[i] + v[j] == k) {
                    return true;
                }
            }
        }
        return false;
    }
};
