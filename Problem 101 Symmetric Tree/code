/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

bool symmetric(TreeNode* leftnode , TreeNode* rightnode){
    if(leftnode== nullptr && rightnode== nullptr){
        return true;

    }
    else if(leftnode== nullptr && rightnode!= nullptr){
        return false;
    }
    else if(leftnode != nullptr && rightnode== nullptr){
        return false;
    }
    if(leftnode->val!=  rightnode->val){
        return false;
    }
    return (symmetric(leftnode->left, rightnode->right) && symmetric(leftnode->right ,rightnode->left) );
}
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if(root==nullptr){
            return true;
        }
        return symmetric(root->left, root->right);
        
    }
};